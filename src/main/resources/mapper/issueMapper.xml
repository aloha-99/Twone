<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.shinjin.twone.dao.IssueDAO" >

    <!-- 이슈 생성 -->
    <insert id="addIssue" useGeneratedKeys="true" keyProperty="issueSeq" parameterType="IssueDTO">
        <selectKey keyProperty="issueSeq" resultType="int" order="BEFORE">
            SELECT nextval('issue_seq') FROM dual
        </selectKey>
        INSERT INTO t_issue
        VALUES (#{issueSeq}, #{projectSeq}, #{boardSeq}, #{colSeq}, #{memSeq}
          , CONCAT(#{issueCode}, #{issueSeq}), #{issueTitle}, null, NOW(), NOW(), null)
    </insert>

    <!-- 이슈 기본정보 변경 -->
    <update id="updateIssueInfo" parameterType="IssueDTO">
        UPDATE t_issue
        SET
            issue_title = #{issueTitle},
            issue_summary = #{issueSummary},
            issue_update = NOW()
        WHERE issue_seq = #{issueSeq}
    </update>

    <!-- 이슈를 다른 컬럼으로 이동 -->
    <update id="moveToOtherCol" parameterType="IssueDTO">
        UPDATE t_issue
        SET col_seq = #{colSeq}
        WHERE issue_seq = #{issueSeq}
    </update>

    <!-- 이슈 업데이트 일자 변경 -->
    <update id="updateIssueUpdate" parameterType="int">
        UPDATE t_issue
        SET issue_update = NOW()
        WHERE issue_seq = #{issueSeq}
    </update>

    <!-- IssueDTO 불러오기 -->
    <select id="getIssueDTO" parameterType="int" resultType="IssueDTO">
        SELECT *
        FROM t_issue
        WHERE issue_seq = #{issueSeq}
    </select>

    <!-- IssueList 불러오기 by colSeq -->
    <select id="getIssueListByColSeq" parameterType="int" resultType="IssueDTO">
        SELECT *
        FROM t_issue
        WHERE col_seq = #{colSeq}
        ORDER BY issue_seq DESC
    </select>

    <!-- issueSeqList 불러오기 by boardSeq -->
    <select id="getIssueSeqListUnderBoard" parameterType="int" resultType="int">
        SELECT issue_seq
        FROM t_issue
        WHERE board_seq = #{boardSeq}
    </select>

    <!-- issueSeqList 불러오기 by projectSeq -->
    <select id="getIssueSeqListUnderProject" parameterType="int" resultType="int">
        SELECT issue_seq
        FROM t_issue
        WHERE project_seq = #{projectSeq}
    </select>

    <!-- 링크 가능한 이슈 리스트 불러오기 -->
    <select id="getUnlinkedIssueList" parameterType="IssueDTO" resultType="IssueDTO">
        SELECT DISTINCT *
        FROM t_issue
        WHERE project_seq = #{projectSeq}
          AND issue_seq != #{issueSeq}
	      AND issue_seq NOT IN (SELECT linked_main FROM t_linked_issue WHERE issue_seq = #{issueSeq})
	      AND issue_seq NOT IN (SELECT issue_seq FROM t_linked_issue WHERE linked_main = #{issueSeq});
    </select>

    <!-- 링크된 이슈 리스트 불러오기 -->
    <select id="getLinkedIssueList" parameterType="int" resultType="IssueDTO">
        SELECT DISTINCT *
        FROM t_issue
        WHERE issue_seq IN (SELECT linked_main FROM t_linked_issue WHERE issue_seq = ${issueSeq})
           OR issue_seq IN (SELECT issue_seq FROM t_linked_issue WHERE linked_main = ${issueSeq})
    </select>

    <!-- 이슈 삭제 by issueSeq -->
    <delete id="deleteIssue" parameterType="int">
        DELETE FROM t_issue
        WHERE issue_seq = #{issueSeq}
    </delete>

    <!-- 이슈 삭제 by colSeq -->
    <delete id="deleteIssueByColSeq" parameterType="int">
        DELETE FROM t_issue
        WHERE col_seq = #{colSeq}
    </delete>

    <!-- 이슈 삭제 by boardSeq -->
    <delete id="deleteIssueByBoardSeq" parameterType="int">
        DELETE FROM t_issue
        WHERE board_seq = #{boardSeq}
    </delete>

    <!-- 이슈 삭제 by projectSeq -->
    <delete id="deleteIssueByProjectSeq" parameterType="int">
        DELETE FROM t_issue
        WHERE project_seq = #{projectSeq}
    </delete>

</mapper>